// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WishList.API;

#nullable disable

namespace WishList.API.Migrations
{
    [DbContext(typeof(WishListContext))]
    [Migration("20240621152454_InitWishListDb")]
    partial class InitWishListDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WishList.API.Models.LoveList", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("UserId");

                    b.ToTable("LoveLists");
                });

            modelBuilder.Entity("WishList.API.Models.LoveList", b =>
                {
                    b.OwnsMany("WishList.API.Models.LoveListItem", "Items", b1 =>
                        {
                            b1.Property<Guid>("LoveListUserId")
                                .HasColumnType("uuid");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("integer");

                            b1.Property<Guid>("AuthorId")
                                .HasColumnType("uuid");

                            b1.Property<string>("AuthorName")
                                .HasColumnType("text");

                            b1.Property<Guid>("CourseId")
                                .HasColumnType("uuid");

                            b1.Property<string>("CourseImage")
                                .HasColumnType("text");

                            b1.Property<string>("CourseName")
                                .HasColumnType("text");

                            b1.Property<decimal>("Price")
                                .HasColumnType("numeric");

                            b1.HasKey("LoveListUserId", "Id");

                            b1.ToTable("LoveLists");

                            b1.ToJson("Items");

                            b1.WithOwner()
                                .HasForeignKey("LoveListUserId");
                        });

                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
